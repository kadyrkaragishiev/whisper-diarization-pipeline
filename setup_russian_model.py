#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä—É—Å—Å–∫–æ–π –º–æ–¥–µ–ª–∏ Whisper
–ö–æ–ø–∏—Ä—É–µ—Ç –º–æ–¥–µ–ª—å –∏–∑ whisper-large-v3-russian-pt –≤ –∫–µ—à –º–æ–¥–µ–ª–µ–π
"""

import os
import sys
import shutil
from pathlib import Path

def setup_russian_model():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä—É—Å—Å–∫–æ–π –º–æ–¥–µ–ª–∏ Whisper"""
    
    # –ü—É—Ç–∏
    current_dir = Path.cwd()
    source_path = current_dir / "whisper-large-v3-russian-pt"
    models_dir = current_dir / "models"
    custom_whisper_dir = models_dir / "custom_whisper"
    dest_path = custom_whisper_dir / "whisper-large-v3-russian"
    
    print("üá∑üá∫ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä—É—Å—Å–∫–æ–π –º–æ–¥–µ–ª–∏ Whisper...")
    print(f"üìÅ –ò—Å—Ç–æ—á–Ω–∏–∫: {source_path}")
    print(f"üìÅ –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: {dest_path}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–π –º–æ–¥–µ–ª–∏
    if not source_path.exists():
        print(f"‚ùå –ü–∞–ø–∫–∞ —Å –º–æ–¥–µ–ª—å—é –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {source_path}")
        print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–∞–ø–∫–∞ whisper-large-v3-russian-pt –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã –º–æ–¥–µ–ª–∏
    required_files = ["config.json", "generation_config.json"]
    for file in required_files:
        if not (source_path / file).exists():
            print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∞–π–ª: {file}")
            return False
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    custom_whisper_dir.mkdir(parents=True, exist_ok=True)
    
    try:
        # –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –º–æ–¥–µ–ª—å –µ—Å–ª–∏ –µ—Å—Ç—å
        if dest_path.exists():
            print("üóëÔ∏è  –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –º–æ–¥–µ–ª—å...")
            shutil.rmtree(dest_path)
        
        # –ö–æ–ø–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å
        print("üìÅ –ö–æ–ø–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å...")
        shutil.copytree(source_path, dest_path)
        
        print("‚úÖ –ú–æ–¥–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞!")
        print(f"üìç –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ: {dest_path}")
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é
        print("\nüöÄ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä—É—Å—Å–∫—É—é –º–æ–¥–µ–ª—å:")
        print(f"python main.py input.wav --custom-model {dest_path}")
        print("\nüí° –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ:")
        print(f"python main.py input.wav --custom-model models/custom_whisper/whisper-large-v3-russian")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä –º–æ–¥–µ–ª–∏
        total_size = sum(f.stat().st_size for f in dest_path.rglob('*') if f.is_file())
        print(f"\nüìä –†–∞–∑–º–µ—Ä –º–æ–¥–µ–ª–∏: {total_size / (1024**3):.1f} GB")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üá∑üá∫ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä—É—Å—Å–∫–æ–π –º–æ–¥–µ–ª–∏ Whisper antony66/whisper-large-v3-russian")
    print("=" * 60)
    
    if setup_russian_model():
        print("\nüéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        
        # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        print("\nüì¶ –ù–µ –∑–∞–±—É–¥—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:")
        print("pip install transformers accelerate")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        print("\nüìù –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:")
        print("python main.py sample.wav --custom-model models/custom_whisper/whisper-large-v3-russian")
        
    else:
        print("\n‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        sys.exit(1)

if __name__ == "__main__":
    main() 
#!/bin/bash

# Whisper Diarization Pipeline - Universal Launcher
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ NVIDIA GPU –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –≤–µ—Ä—Å–∏—é

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üé§ Whisper Diarization Pipeline${NC}"
echo -e "${BLUE}================================${NC}"

# Check if Docker is installed
if ! command -v docker &> /dev/null; then
    echo -e "${RED}‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.${NC}"
    exit 1
fi

# Check if Docker Compose is available
if ! command -v docker-compose &> /dev/null && ! docker compose version &> /dev/null; then
    echo -e "${RED}‚ùå Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.${NC}"
    exit 1
fi

# Function to check NVIDIA GPU availability
check_nvidia_gpu() {
    if command -v nvidia-smi &> /dev/null; then
        if nvidia-smi &> /dev/null; then
            echo -e "${GREEN}‚úÖ NVIDIA GPU –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞${NC}"
            return 0
        fi
    fi
    echo -e "${YELLOW}‚ö†Ô∏è  NVIDIA GPU –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∏–ª–∏ –¥—Ä–∞–π–≤–µ—Ä—ã –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã${NC}"
    return 1
}

# Function to check NVIDIA Docker runtime
check_nvidia_docker() {
    if docker info 2>/dev/null | grep -q nvidia; then
        echo -e "${GREEN}‚úÖ NVIDIA Docker runtime –¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
        return 0
    fi
    echo -e "${YELLOW}‚ö†Ô∏è  NVIDIA Docker runtime –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    return 1
}

# Create necessary directories
echo -e "${BLUE}üìÅ –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏...${NC}"
mkdir -p input output models

# Create .env file if it doesn't exist
if [ ! -f .env ]; then
    echo -e "${BLUE}üìù –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª...${NC}"
    cp env.example .env
    echo -e "${YELLOW}üí° –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤–∞—à HUGGINGFACE_TOKEN –µ—Å–ª–∏ –Ω—É–∂–Ω–æ${NC}"
fi

# Determine which version to use
USE_GPU=false
if check_nvidia_gpu && check_nvidia_docker; then
    USE_GPU=true
    PROFILE="gpu"
    SERVICE="whisper-diarization-gpu"
    echo -e "${GREEN}üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º GPU –≤–µ—Ä—Å–∏—é${NC}"
else
    PROFILE="cpu"
    SERVICE="whisper-diarization-cpu"
    echo -e "${YELLOW}üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º CPU –≤–µ—Ä—Å–∏—é${NC}"
fi

# Build the image
echo -e "${BLUE}üî® –°–æ–±–∏—Ä–∞–µ–º Docker –æ–±—Ä–∞–∑...${NC}"
if command -v docker-compose &> /dev/null; then
    docker-compose --profile $PROFILE build $SERVICE
else
    docker compose --profile $PROFILE build $SERVICE
fi

# Function to run the pipeline
run_pipeline() {
    local audio_file="$1"
    shift
    local args="$@"
    
    if [ ! -f "input/$audio_file" ]; then
        echo -e "${RED}‚ùå –§–∞–π–ª input/$audio_file –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
        echo -e "${YELLOW}üí° –ü–æ–º–µ—Å—Ç–∏—Ç–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é input/${NC}"
        exit 1
    fi
    
    echo -e "${GREEN}üéµ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: $audio_file${NC}"
    
    if command -v docker-compose &> /dev/null; then
        docker-compose --profile $PROFILE run --rm $SERVICE "$audio_file" $args
    else
        docker compose --profile $PROFILE run --rm $SERVICE "$audio_file" $args
    fi
}

# Check command line arguments
if [ $# -eq 0 ]; then
    echo -e "${BLUE}üìñ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø—Ä–∞–≤–∫—É...${NC}"
    if command -v docker-compose &> /dev/null; then
        docker-compose --profile $PROFILE run --rm $SERVICE --help
    else
        docker compose --profile $PROFILE run --rm $SERVICE --help
    fi
    echo ""
    echo -e "${YELLOW}–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:${NC}"
    echo -e "${GREEN}  ./run.sh audio.wav${NC}                          # –ë–∞–∑–æ–≤–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞"
    echo -e "${GREEN}  ./run.sh audio.wav --model large${NC}            # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ–ª—å—à—É—é –º–æ–¥–µ–ª—å"
    echo -e "${GREEN}  ./run.sh audio.wav --max-speakers 5${NC}         # –ú–∞–∫—Å–∏–º—É–º 5 —Å–ø–∏–∫–µ—Ä–æ–≤"
    echo -e "${GREEN}  ./run.sh audio.wav --custom-model path/model${NC} # –ö–∞—Å—Ç–æ–º–Ω–∞—è –º–æ–¥–µ–ª—å"
    echo ""
    echo -e "${BLUE}üí° –ü–æ–º–µ—Å—Ç–∏—Ç–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é input/${NC}"
    echo -e "${BLUE}üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ output/${NC}"
else
    run_pipeline "$@"
fi 
#!/bin/bash

# Complete Whisper Diarization Pipeline Setup
# –ü–æ–ª–Ω–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
NC='\033[0m' # No Color

echo -e "${PURPLE}üé§ Whisper Diarization Pipeline - Complete Setup${NC}"
echo -e "${PURPLE}=================================================${NC}"
echo ""
echo -e "${BLUE}–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç:${NC}"
echo -e "${BLUE}‚Ä¢ Docker –∏ Docker Compose${NC}"
echo -e "${BLUE}‚Ä¢ NVIDIA Docker runtime (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ)${NC}"
echo -e "${BLUE}‚Ä¢ –°–æ–±–µ—Ä–µ—Ç Docker –æ–±—Ä–∞–∑—ã${NC}"
echo -e "${BLUE}‚Ä¢ –ù–∞—Å—Ç—Ä–æ–∏—Ç –æ–∫—Ä—É–∂–µ–Ω–∏–µ${NC}"
echo ""

# Ask for confirmation
read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É? (y/N): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo -e "${YELLOW}–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞${NC}"
    exit 0
fi

echo -e "${BLUE}üöÄ –ù–∞—á–∏–Ω–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É...${NC}"

# Step 1: Install Docker
echo -e "${BLUE}üì¶ –®–∞–≥ 1: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker...${NC}"
if [ -f "./install-docker.sh" ]; then
    chmod +x install-docker.sh
    ./install-docker.sh
else
    echo -e "${RED}‚ùå –§–∞–π–ª install-docker.sh –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    exit 1
fi

# Step 2: Create directories
echo -e "${BLUE}üìÅ –®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π...${NC}"
mkdir -p input output models

# Step 3: Setup environment
echo -e "${BLUE}‚öôÔ∏è  –®–∞–≥ 3: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è...${NC}"
if [ ! -f ".env" ]; then
    cp env.example .env
    echo -e "${YELLOW}üí° –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env –∏–∑ —à–∞–±–ª–æ–Ω–∞${NC}"
    echo -e "${YELLOW}üí° –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env –∏ –¥–æ–±–∞–≤—å—Ç–µ HUGGINGFACE_TOKEN –µ—Å–ª–∏ –Ω—É–∂–Ω–æ${NC}"
else
    echo -e "${GREEN}‚úÖ –§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç${NC}"
fi

# Step 4: Test Docker
echo -e "${BLUE}üß™ –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker...${NC}"
if docker run --rm hello-world > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Docker —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ${NC}"
else
    echo -e "${RED}‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å Docker${NC}"
    echo -e "${YELLOW}üí° –í–æ–∑–º–æ–∂–Ω–æ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å—Å—è –∏–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É docker${NC}"
    echo -e "${YELLOW}üí° –ö–æ–º–∞–Ω–¥–∞: sudo usermod -aG docker \$USER${NC}"
fi

# Step 5: Check GPU support
echo -e "${BLUE}üéÆ –®–∞–≥ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ GPU –ø–æ–¥–¥–µ—Ä–∂–∫–∏...${NC}"
GPU_AVAILABLE=false
if command -v nvidia-smi &> /dev/null && nvidia-smi &> /dev/null; then
    if docker info 2>/dev/null | grep -q nvidia; then
        echo -e "${GREEN}‚úÖ NVIDIA GPU –∏ Docker runtime –¥–æ—Å—Ç—É–ø–Ω—ã${NC}"
        GPU_AVAILABLE=true
    else
        echo -e "${YELLOW}‚ö†Ô∏è  NVIDIA GPU –Ω–∞–π–¥–µ–Ω–∞, –Ω–æ Docker runtime –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"
    fi
else
    echo -e "${YELLOW}‚ö†Ô∏è  NVIDIA GPU –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞${NC}"
fi

# Step 6: Build Docker images
echo -e "${BLUE}üî® –®–∞–≥ 6: –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤...${NC}"

if [ "$GPU_AVAILABLE" = true ]; then
    echo -e "${GREEN}üöÄ –°–æ–±–∏—Ä–∞–µ–º GPU –≤–µ—Ä—Å–∏—é...${NC}"
    if command -v docker-compose &> /dev/null; then
        docker-compose --profile gpu build whisper-diarization-gpu
    else
        docker compose --profile gpu build whisper-diarization-gpu
    fi
    RECOMMENDED_VERSION="GPU"
else
    echo -e "${YELLOW}üöÄ –°–æ–±–∏—Ä–∞–µ–º CPU –≤–µ—Ä—Å–∏—é...${NC}"
    if command -v docker-compose &> /dev/null; then
        docker-compose --profile cpu build whisper-diarization-cpu
    else
        docker compose --profile cpu build whisper-diarization-cpu
    fi
    RECOMMENDED_VERSION="CPU"
fi

# Step 7: Test the pipeline
echo -e "${BLUE}üß™ –®–∞–≥ 7: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã...${NC}"
echo -e "${BLUE}–ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø—Ä–∞–≤–∫—É...${NC}"
chmod +x run.sh
./run.sh

echo ""
echo -e "${GREEN}üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!${NC}"
echo ""
echo -e "${PURPLE}üìã –ß—Ç–æ –¥–∞–ª—å—à–µ:${NC}"
echo ""
echo -e "${BLUE}1. –ü–æ–º–µ—Å—Ç–∏—Ç–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é input/:${NC}"
echo -e "${GREEN}   cp your_audio.wav input/${NC}"
echo ""
echo -e "${BLUE}2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –æ–±—Ä–∞–±–æ—Ç–∫—É:${NC}"
echo -e "${GREEN}   ./run.sh your_audio.wav${NC}"
echo ""
echo -e "${BLUE}3. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—É–¥—É—Ç –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ output/${NC}"
echo ""
echo -e "${BLUE}üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è –≤–µ—Ä—Å–∏—è: ${RECOMMENDED_VERSION}${NC}"
echo ""
if [ "$GPU_AVAILABLE" = false ]; then
    echo -e "${YELLOW}üí° –î–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ NVIDIA GPU –∏ –¥—Ä–∞–π–≤–µ—Ä—ã${NC}"
fi
echo ""
echo -e "${BLUE}üìñ –ü–æ–¥—Ä–æ–±–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: README.md${NC}"
echo -e "${BLUE}üêõ –ü—Ä–æ–±–ª–µ–º—ã? –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–∑–¥–µ–ª '–£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –Ω–µ–ø–æ–ª–∞–¥–æ–∫' –≤ README.md${NC}"
echo ""
echo -e "${PURPLE}–ì–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é! üöÄ${NC}" 
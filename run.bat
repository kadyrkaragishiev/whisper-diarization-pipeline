@echo off
REM Whisper Diarization Pipeline - Windows Batch Launcher
REM –ü—Ä–æ—Å—Ç–æ–π –ª–∞—É–Ω—á–µ—Ä –¥–ª—è Windows –±–µ–∑ PowerShell

title Whisper Diarization Pipeline

echo.
echo ===========================================
echo  üé§ Whisper Diarization Pipeline
echo ===========================================
echo.

REM Check if Docker is installed
docker --version >nul 2>&1
if errorlevel 1 (
    echo ‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.
    echo üí° –°–∫–∞—á–∞–π—Ç–µ —Å https://www.docker.com/products/docker-desktop
    echo üí° –ò–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ PowerShell –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:
    echo    PowerShell -ExecutionPolicy Bypass -File install-docker.ps1
    pause
    exit /b 1
)

REM Check if Docker is running
docker version >nul 2>&1
if errorlevel 1 (
    echo ‚ùå Docker –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ Docker Desktop –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.
    pause
    exit /b 1
)

REM Create necessary directories
if not exist "input" mkdir input
if not exist "output" mkdir output
if not exist "models" mkdir models

REM Create .env file if it doesn't exist
if not exist ".env" (
    if exist "env.example" (
        copy "env.example" ".env" >nul
        echo ‚úÖ –°–æ–∑–¥–∞–Ω .env —Ñ–∞–π–ª –∏–∑ —à–∞–±–ª–æ–Ω–∞
        echo üí° –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª –∏ –¥–æ–±–∞–≤—å—Ç–µ HUGGINGFACE_TOKEN –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    )
)

REM Check for NVIDIA GPU
nvidia-smi >nul 2>&1
if errorlevel 1 (
    set "GPU_AVAILABLE=false"
    set "PROFILE=cpu"
    set "SERVICE=whisper-diarization-cpu"
    echo ‚ö†Ô∏è  NVIDIA GPU –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞ - –∏—Å–ø–æ–ª—å–∑—É–µ–º CPU –≤–µ—Ä—Å–∏—é
) else (
    set "GPU_AVAILABLE=true"
    set "PROFILE=gpu"
    set "SERVICE=whisper-diarization-gpu"
    echo ‚úÖ NVIDIA GPU –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞ - –∏—Å–ø–æ–ª—å–∑—É–µ–º GPU –≤–µ—Ä—Å–∏—é
)

REM Check if Docker Compose is available
docker-compose --version >nul 2>&1
if errorlevel 1 (
    set "COMPOSE_CMD=docker compose"
) else (
    set "COMPOSE_CMD=docker-compose"
)

REM If no arguments provided, show help
if "%~1"=="" (
    echo üìñ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø—Ä–∞–≤–∫—É...
    echo.
    %COMPOSE_CMD% --profile %PROFILE% run --rm %SERVICE% --help
    echo.
    echo –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
    echo   run.bat audio.wav                    # –ë–∞–∑–æ–≤–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞
    echo   run.bat audio.wav --model large     # –ë–æ–ª—å—à–∞—è –º–æ–¥–µ–ª—å
    echo   run.bat audio.wav --max-speakers 5  # –ú–∞–∫—Å–∏–º—É–º 5 —Å–ø–∏–∫–µ—Ä–æ–≤
    echo.
    echo üí° –ü–æ–º–µ—Å—Ç–∏—Ç–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é input\
    echo üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ output\
    echo.
    echo –î–ª—è PowerShell –≤–µ—Ä—Å–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: .\run.ps1
    echo –î–ª—è –ø–æ–ª–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏: .\setup-complete.ps1
    pause
    exit /b 0
)

REM Check if input file exists
if not exist "input\%~1" (
    echo ‚ùå –§–∞–π–ª input\%~1 –Ω–µ –Ω–∞–π–¥–µ–Ω
    echo üí° –ü–æ–º–µ—Å—Ç–∏—Ç–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é input\
    pause
    exit /b 1
)

echo üéµ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: %~1

REM Build the image first
echo üî® –°–æ–±–∏—Ä–∞–µ–º Docker –æ–±—Ä–∞–∑...
%COMPOSE_CMD% --profile %PROFILE% build %SERVICE%

REM Run the pipeline with all arguments
echo üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É...
%COMPOSE_CMD% --profile %PROFILE% run --rm %SERVICE% %*

if errorlevel 1 (
    echo ‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    pause
    exit /b 1
)

echo.
echo ‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!
echo üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ output\
echo.
pause 